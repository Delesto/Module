from asyncio import sleep
from .. import loader, utils

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∞–º–∞
active_spam = {}

def register(cb):
    cb(NNSpamMod())

class NNSpamMod(loader.Module):
    """üåò –ú–æ–¥—É–ª—å NNSpam  ïÔø´·¥•Ôø© î
    
    ‚ÑπÔ∏è –ú–æ–¥—É–ª—å –¥–ª—è —Å–ø–∞–º–∞ —Ç–µ–∫—Å—Ç–æ–º —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ç–µ–≥–æ–º.

    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    .nnSpam <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> [—Ç–µ–≥] <—Ç–µ–∫—Å—Ç>
    .NnOff - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º

    **Module BY @i_love_opeoo**
    """
    
    strings = {'name': 'NNSpam'}
    
    def __init__(self):
        self.name = self.strings['name']

    async def nnSpamcmd(self, message):
        """<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> [—Ç–µ–≥] <—Ç–µ–∫—Å—Ç> (—Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"""
        reply = await message.get_reply_message()
        if not reply:
            await message.edit("<b>–ö–æ–≥–æ —Å–ø–∞–º–∏—Ç—å? –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!</b>")
            return

        chat_id = message.chat_id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º chat_id –∫–∞–∫ –∫–ª—é—á –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        user_id = reply.sender_id
        args = utils.get_args_raw(message)

        if not args:
            count = None  # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –¥–µ–ª–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Å–ø–∞–º
            text = "–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Å–ø–∞–º!"  # –¢–µ–∫—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        else:
            args = args.split(" ", 1)
            try:
                count = int(args[0]) if args[0].isdigit() else None
                text = args[1].strip() if len(args) > 1 else args[0].strip()
            except ValueError:
                await message.edit("<b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π: .nnSpam <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> [—Ç–µ–≥] <—Ç–µ–∫—Å—Ç></b>")
                return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–≥–∞
        if "|" in text:
            tag, text = text.split("|", 1)
            tag = tag.strip()
        else:
            tag = None

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if tag:
            formatted_message = f"<a href=\"tg://user?id={user_id}\">{tag}</a>: {text.strip()}"
        else:
            formatted_message = f"<a href=\"tg://user?id={user_id}\">{text.strip()}</a>"

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ø–∞–º
        active_spam[chat_id] = True
        await message.edit("<b>–ù–∞—á–∏–Ω–∞—é —Å–ø–∞–º!</b>")

        if count is None:
            # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Å–ø–∞–º
            while active_spam.get(chat_id, False):
                await message.client.send_message(message.to_id, formatted_message)
                await sleep(0.3)
        else:
            # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Å–ø–∞–º
            for _ in range(count):
                if not active_spam.get(chat_id, False):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É
                    break
                await message.client.send_message(message.to_id, formatted_message)
                await sleep(0.3)

        active_spam[chat_id] = False
        await message.edit("<b>–°–ø–∞–º –∑–∞–≤–µ—Ä—à—ë–Ω!</b>")

    async def NnOffcmd(self, message):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º"""
        chat_id = message.chat_id
        if active_spam.get(chat_id, False):
            active_spam[chat_id] = False
            await message.edit("<b>–°–ø–∞–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>")
        else:
            await message.edit("<b>–°–ø–∞–º –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω!</b>")